{
	"id": "oval:org.opensuse.security:def:202146989",
	"version": "1",
	"class": "vulnerability",
	"metadata": {
		"Title": "CVE-2021-46989",
		"affected": {
			"family": "unix",
			"Platform": [
				"SUSE Linux Enterprise Server 15 SP1-LTSS",
				"SUSE Linux Enterprise Server 15-LTSS"
			]
		},
		"reference": [
			{
				"ref_id": "Mitre CVE-2021-46989",
				"ref_url": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-46989",
				"source": "CVE"
			},
			{
				"ref_id": "SUSE CVE-2021-46989",
				"ref_url": "https://www.suse.com/security/cve/CVE-2021-46989",
				"source": "SUSE CVE"
			}
		],
		"Description": "\n    In the Linux kernel, the following vulnerability has been resolved:\n\nhfsplus: prevent corruption in shrinking truncate\n\nI believe there are some issues introduced by commit 31651c607151\n(\"hfsplus: avoid deadlock on file truncation\")\n\nHFS+ has extent records which always contains 8 extents.  In case the\nfirst extent record in catalog file gets full, new ones are allocated from\nextents overflow file.\n\nIn case shrinking truncate happens to middle of an extent record which\nlocates in extents overflow file, the logic in hfsplus_file_truncate() was\nchanged so that call to hfs_brec_remove() is not guarded any more.\n\nRight action would be just freeing the extents that exceed the new size\ninside extent record by calling hfsplus_free_extents(), and then check if\nthe whole extent record should be removed.  However since the guard\n(blk_cnt > start) is now after the call to hfs_brec_remove(), this has\nunfortunate effect that the last matching extent record is removed\nunconditionally.\n\nTo reproduce this issue, create a file which has at least 10 extents, and\nthen perform shrinking truncate into middle of the last extent record, so\nthat the number of remaining extents is not under or divisible by 8.  This\ncauses the last extent record (8 extents) to be removed totally instead of\ntruncating into middle of it.  Thus this causes corruption, and lost data.\n\nFix for this is simply checking if the new truncated end is below the\nstart of this extent record, making it safe to remove the full extent\nrecord.  However call to hfs_brec_remove() can't be moved to it's previous\nplace since we're dropping ->tree_lock and it can cause a race condition\nand the cached info being invalidated possibly corrupting the node data.\n\nAnother issue is related to this one.  When entering into the block\n(blk_cnt > start) we are not holding the ->tree_lock.  We break out from\nthe loop not holding the lock, but hfs_find_exit() does unlock it.  Not\nsure if it's possible for someone else to take the lock under our feet,\nbut it can cause hard to debug errors and premature unlocking.  Even if\nthere's no real risk of it, the locking should still always be kept in\nbalance.  Thus taking the lock now just before the check.\n    ",
		"advisory": {
			"from": "security@suse.de",
			"Severity": "Moderate",
			"cve": {
				"text": "CVE-2021-46989",
				"href": "https://www.suse.com/security/cve/CVE-2021-46989/",
				"impact": "moderate"
			},
			"bugzilla": [
				{
					"text": "SUSE bug 1220737",
					"href": "https://bugzilla.suse.com/1220737"
				}
			],
			"issued": {
				"date": "2024-03-07"
			},
			"updated": {
				"date": "2024-03-07"
			},
			"affected_cpe_list": {
				"Cpe": [
					"cpe:/o:suse:sles-ltss:15",
					"cpe:/o:suse:sles-ltss:15:sp1"
				]
			}
		}
	},
	"criteria": {
		"operator": "AND",
		"criterias": [
			{
				"operator": "OR",
				"criterions": [
					{
						"test_ref": "oval:org.opensuse.security:tst:2009341508",
						"comment": "SUSE Linux Enterprise Server 15 SP1-LTSS is installed"
					},
					{
						"test_ref": "oval:org.opensuse.security:tst:2009302033",
						"comment": "SUSE Linux Enterprise Server 15-LTSS is installed"
					}
				]
			},
			{
				"operator": "OR",
				"criterions": [
					{
						"test_ref": "oval:org.opensuse.security:tst:2009334017",
						"comment": "kernel-default is not affected"
					},
					{
						"test_ref": "oval:org.opensuse.security:tst:2009335425",
						"comment": "kernel-default-base is not affected"
					},
					{
						"test_ref": "oval:org.opensuse.security:tst:2009335423",
						"comment": "kernel-default-devel is not affected"
					},
					{
						"test_ref": "oval:org.opensuse.security:tst:2009335426",
						"comment": "kernel-default-man is not affected"
					},
					{
						"test_ref": "oval:org.opensuse.security:tst:2009338037",
						"comment": "reiserfs-kmp-default is not affected"
					},
					{
						"test_ref": "oval:org.opensuse.security:tst:2009334791",
						"comment": "kernel-devel is not affected"
					},
					{
						"test_ref": "oval:org.opensuse.security:tst:2009334792",
						"comment": "kernel-macros is not affected"
					},
					{
						"test_ref": "oval:org.opensuse.security:tst:2009333928",
						"comment": "kernel-source is not affected"
					}
				]
			}
		]
	}
}
