{
	"id": "oval:org.opensuse.security:def:202147608",
	"version": "1",
	"class": "vulnerability",
	"metadata": {
		"title": "CVE-2021-47608",
		"affected": {
			"family": "unix",
			"platform": [
				"SUSE Linux Enterprise Micro 5.0"
			]
		},
		"reference": [
			{
				"ref_id": "Mitre CVE-2021-47608",
				"ref_url": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-47608",
				"source": "CVE"
			},
			{
				"ref_id": "SUSE CVE-2021-47608",
				"ref_url": "https://www.suse.com/security/cve/CVE-2021-47608",
				"source": "SUSE CVE"
			},
			{
				"ref_id": "SUSE-SU-2024:2372-1",
				"ref_url": "https://lists.suse.com/pipermail/sle-updates/2024-July/035868.html",
				"source": "SUSE-SU"
			},
			{
				"ref_id": "SUSE-SU-2024:2394-1",
				"ref_url": "https://lists.suse.com/pipermail/sle-updates/2024-July/035907.html",
				"source": "SUSE-SU"
			},
			{
				"ref_id": "SUSE-SU-2024:2902-1",
				"ref_url": "https://lists.suse.com/pipermail/sle-updates/2024-August/036443.html",
				"source": "SUSE-SU"
			},
			{
				"ref_id": "SUSE-SU-2024:2929-1",
				"ref_url": "https://lists.suse.com/pipermail/sle-updates/2024-August/036473.html",
				"source": "SUSE-SU"
			},
			{
				"ref_id": "SUSE-SU-2024:2939-1",
				"ref_url": "https://lists.suse.com/pipermail/sle-security-updates/2024-August/019211.html",
				"source": "SUSE-SU"
			}
		],
		"description": "\n    In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Fix kernel address leakage in atomic fetch\n\nThe change in commit 37086bfdc737 (\"bpf: Propagate stack bounds to registers\nin atomics w/ BPF_FETCH\") around check_mem_access() handling is buggy since\nthis would allow for unprivileged users to leak kernel pointers. For example,\nan atomic fetch/and with -1 on a stack destination which holds a spilled\npointer will migrate the spilled register type into a scalar, which can then\nbe exported out of the program (since scalar != pointer) by dumping it into\na map value.\n\nThe original implementation of XADD was preventing this situation by using\na double call to check_mem_access() one with BPF_READ and a subsequent one\nwith BPF_WRITE, in both cases passing -1 as a placeholder value instead of\nregister as per XADD semantics since it didn't contain a value fetch. The\nBPF_READ also included a check in check_stack_read_fixed_off() which rejects\nthe program if the stack slot is of __is_pointer_value() if dst_regno < 0.\nThe latter is to distinguish whether we're dealing with a regular stack spill/\nfill or some arithmetical operation which is disallowed on non-scalars, see\nalso 6e7e63cbb023 (\"bpf: Forbid XADD on spilled pointers for unprivileged\nusers\") for more context on check_mem_access() and its handling of placeholder\nvalue -1.\n\nOne minimally intrusive option to fix the leak is for the BPF_FETCH case to\ninitially check the BPF_READ case via check_mem_access() with -1 as register,\nfollowed by the actual load case with non-negative load_reg to propagate\nstack bounds to registers.\n    ",
		"advisory": {
			"from": "security@suse.de",
			"severity": "Moderate",
			"cve": [
				{
					"text": "CVE-2021-47608 at SUSE",
					"href": "https://www.suse.com/security/cve/CVE-2021-47608/",
					"impact": "medium",
					"cvss3": "5.5/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
				},
				{
					"text": "CVE-2021-47608 at NVD",
					"href": "https://nvd.nist.gov/vuln/detail/CVE-2021-47608",
					"impact": "medium",
					"cvss3": "5.5/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"
				}
			],
			"bugzilla": [
				{
					"text": "SUSE bug 1226569",
					"href": "https://bugzilla.suse.com/1226569"
				}
			],
			"issued": {
				"date": "2024-06-21"
			},
			"updated": {
				"date": "2024-11-02"
			},
			"affected_cpe_list": {
				"cpe": [
					"cpe:/o:suse:suse-microos:5.0"
				]
			}
		}
	},
	"criteria": {
		"operator": "AND",
		"criterions": [
			{
				"test_ref": "oval:org.opensuse.security:tst:2009704855",
				"comment": "SUSE Linux Enterprise Micro 5.0 is installed"
			},
			{
				"test_ref": "oval:org.opensuse.security:tst:2009334017",
				"comment": "kernel-default is not affected"
			}
		]
	}
}
