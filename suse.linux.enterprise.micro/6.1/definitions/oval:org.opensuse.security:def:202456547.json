{
	"id": "oval:org.opensuse.security:def:202456547",
	"version": "1",
	"class": "vulnerability",
	"metadata": {
		"title": "CVE-2024-56547",
		"affected": {
			"family": "unix",
			"platform": [
				"SUSE Linux Micro 6.1"
			]
		},
		"reference": [
			{
				"ref_id": "Mitre CVE-2024-56547",
				"ref_url": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-56547",
				"source": "CVE"
			},
			{
				"ref_id": "SUSE CVE-2024-56547",
				"ref_url": "https://www.suse.com/security/cve/CVE-2024-56547",
				"source": "SUSE CVE"
			}
		],
		"description": "\n    In the Linux kernel, the following vulnerability has been resolved:\n\nrcu/nocb: Fix missed RCU barrier on deoffloading\n\nCurrently, running rcutorture test with torture_type=rcu fwd_progress=8\nn_barrier_cbs=8 nocbs_nthreads=8 nocbs_toggle=100 onoff_interval=60\ntest_boost=2, will trigger the following warning:\n\n\tWARNING: CPU: 19 PID: 100 at kernel/rcu/tree_nocb.h:1061 rcu_nocb_rdp_deoffload+0x292/0x2a0\n\tRIP: 0010:rcu_nocb_rdp_deoffload+0x292/0x2a0\n\t Call Trace:\n\t  <TASK>\n\t  ? __warn+0x7e/0x120\n\t  ? rcu_nocb_rdp_deoffload+0x292/0x2a0\n\t  ? report_bug+0x18e/0x1a0\n\t  ? handle_bug+0x3d/0x70\n\t  ? exc_invalid_op+0x18/0x70\n\t  ? asm_exc_invalid_op+0x1a/0x20\n\t  ? rcu_nocb_rdp_deoffload+0x292/0x2a0\n\t  rcu_nocb_cpu_deoffload+0x70/0xa0\n\t  rcu_nocb_toggle+0x136/0x1c0\n\t  ? __pfx_rcu_nocb_toggle+0x10/0x10\n\t  kthread+0xd1/0x100\n\t  ? __pfx_kthread+0x10/0x10\n\t  ret_from_fork+0x2f/0x50\n\t  ? __pfx_kthread+0x10/0x10\n\t  ret_from_fork_asm+0x1a/0x30\n\t  </TASK>\n\nCPU0                               CPU2                          CPU3\n//rcu_nocb_toggle             //nocb_cb_wait                   //rcutorture\n\n// deoffload CPU1             // process CPU1's rdp\nrcu_barrier()\n    rcu_segcblist_entrain()\n        rcu_segcblist_add_len(1);\n        // len == 2\n        // enqueue barrier\n        // callback to CPU1's\n        // rdp->cblist\n                             rcu_do_batch()\n                                 // invoke CPU1's rdp->cblist\n                                 // callback\n                                 rcu_barrier_callback()\n                                                             rcu_barrier()\n                                                               mutex_lock(&rcu_state.barrier_mutex);\n                                                               // still see len == 2\n                                                               // enqueue barrier callback\n                                                               // to CPU1's rdp->cblist\n                                                               rcu_segcblist_entrain()\n                                                                   rcu_segcblist_add_len(1);\n                                                                   // len == 3\n                                 // decrement len\n                                 rcu_segcblist_add_len(-2);\n                             kthread_parkme()\n\n// CPU1's rdp->cblist len == 1\n// Warn because there is\n// still a pending barrier\n// trigger warning\nWARN_ON_ONCE(rcu_segcblist_n_cbs(&rdp->cblist));\ncpus_read_unlock();\n\n                                                                // wait CPU1 to comes online and\n                                                                // invoke barrier callback on\n                                                                // CPU1 rdp's->cblist\n                                                                wait_for_completion(&rcu_state.barrier_completion);\n// deoffload CPU4\ncpus_read_lock()\n  rcu_barrier()\n    mutex_lock(&rcu_state.barrier_mutex);\n    // block on barrier_mutex\n    // wait rcu_barrier() on\n    // CPU3 to unlock barrier_mutex\n    // but CPU3 unlock barrier_mutex\n    // need to wait CPU1 comes online\n    // when CPU1 going online will block on cpus_write_lock\n\nThe above scenario will not only trigger a WARN_ON_ONCE(), but also\ntrigger a deadlock.\n\nThanks to nocb locking, a second racing rcu_barrier() on an offline CPU\nwill either observe the decremented callback counter down to 0 and spare\nthe callback enqueue, or rcuo will observe the new callback and keep\nrdp->nocb_cb_sleep to false.\n\nTherefore check rdp->nocb_cb_sleep before parking to make sure no\nfurther rcu_barrier() is waiting on the rdp.\n    ",
		"advisory": {
			"from": "security@suse.de",
			"severity": "Moderate",
			"cve": [
				{
					"text": "CVE-2024-56547 at SUSE",
					"href": "https://www.suse.com/security/cve/CVE-2024-56547/",
					"impact": "medium",
					"cvss3": "4.7/CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"
				},
				{
					"text": "CVE-2024-56547 at NVD",
					"href": "https://nvd.nist.gov/vuln/detail/CVE-2024-56547"
				}
			],
			"bugzilla": [
				{
					"text": "SUSE bug 1235072",
					"href": "https://bugzilla.suse.com/1235072"
				}
			],
			"issued": {
				"date": "2025-01-04"
			},
			"updated": {
				"date": "2025-01-04"
			},
			"affected_cpe_list": {
				"cpe": [
					"cpe:/o:suse:sl-micro:6.1"
				]
			}
		}
	},
	"criteria": {
		"operator": "AND",
		"criterias": [
			{
				"operator": "OR",
				"criterions": [
					{
						"test_ref": "oval:org.opensuse.security:tst:2009334017",
						"comment": "kernel-default is not affected"
					},
					{
						"test_ref": "oval:org.opensuse.security:tst:2009334791",
						"comment": "kernel-devel is not affected"
					},
					{
						"test_ref": "oval:org.opensuse.security:tst:2009334792",
						"comment": "kernel-macros is not affected"
					},
					{
						"test_ref": "oval:org.opensuse.security:tst:2009333928",
						"comment": "kernel-source is not affected"
					},
					{
						"test_ref": "oval:org.opensuse.security:tst:2009728711",
						"comment": "kernel-devel-rt is not affected"
					},
					{
						"test_ref": "oval:org.opensuse.security:tst:2009728712",
						"comment": "kernel-source-rt is not affected"
					}
				]
			}
		],
		"criterions": [
			{
				"test_ref": "oval:org.opensuse.security:tst:2009954035",
				"comment": "SUSE Linux Micro 6.1 is installed"
			}
		]
	}
}
